using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlogApi.Migrations
{
    /// <inheritdoc />
    public partial class PostTags : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""as_addr_obj"" (
            ""id"" BIGINT GENERATED BY DEFAULT AS IDENTITY,
            ""objectid"" BIGINT NOT NULL,
            ""objectguid"" UUID NOT NULL,
            ""changeid"" BIGINT,
            ""name"" TEXT NOT NULL,
            ""typename"" TEXT,
            ""level"" TEXT NOT NULL,
            ""opertypeid"" INTEGER,
            ""previd"" BIGINT,
            ""nextid"" BIGINT,
            ""updatedate"" TIMESTAMP WITH TIME ZONE,
            ""startdate"" TIMESTAMP WITH TIME ZONE,
            ""enddate"" TIMESTAMP WITH TIME ZONE,
            ""isactual"" INTEGER,
            ""isactive"" INTEGER,
            CONSTRAINT ""PK_as_addr_obj"" PRIMARY KEY (""id"")
        );
    ");

            migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""as_adm_hierarchy"" (
            ""id"" BIGINT GENERATED BY DEFAULT AS IDENTITY,
            ""objectid"" BIGINT NOT NULL,
            ""parentobjid"" BIGINT NOT NULL,
            ""changeid"" BIGINT,
            ""regioncode"" TEXT,
            ""areacode"" TEXT,
            ""citycode"" TEXT,
            ""placecode"" TEXT,
            ""plancode"" TEXT,
            ""streetcode"" TEXT,
            ""previd"" BIGINT,
            ""nextid"" BIGINT,
            ""updatedate"" TIMESTAMP WITH TIME ZONE,
            ""startdate"" TIMESTAMP WITH TIME ZONE,
            ""enddate"" TIMESTAMP WITH TIME ZONE,
            ""isactive"" INTEGER,
            ""path"" TEXT,
            CONSTRAINT ""PK_as_adm_hierarchy"" PRIMARY KEY (""id"")
        );
    ");

            migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""as_houses"" (
            ""id"" BIGINT GENERATED BY DEFAULT AS IDENTITY,
            ""objectid"" BIGINT NOT NULL,
            ""objectguid"" UUID NOT NULL,
            ""changeid"" BIGINT,
            ""housenum"" TEXT,
            ""addnum1"" TEXT,
            ""addnum2"" TEXT,
            ""housetype"" INTEGER,
            ""addtype1"" INTEGER,
            ""addtype2"" INTEGER,
            ""opertypeid"" INTEGER,
            ""previd"" BIGINT,
            ""nextid"" BIGINT,
            ""updatedate"" TIMESTAMP WITH TIME ZONE,
            ""startdate"" TIMESTAMP WITH TIME ZONE,
            ""enddate"" TIMESTAMP WITH TIME ZONE,
            ""isactual"" INTEGER,
            ""isactive"" INTEGER,
            CONSTRAINT ""PK_as_houses"" PRIMARY KEY (""id"")
        );
    ");

             migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""as_object_levels"" (
            ""level"" BIGINT GENERATED BY DEFAULT AS IDENTITY,
            ""name"" TEXT NOT NULL,
            ""updatedate"" TIMESTAMP WITH TIME ZONE NOT NULL,
            ""startdate"" TIMESTAMP WITH TIME ZONE NOT NULL,
            ""enddate"" TIMESTAMP WITH TIME ZONE NOT NULL,
            ""isactive"" INTEGER NOT NULL,
            CONSTRAINT ""PK_as_object_levels"" PRIMARY KEY (""level"")
        );
    ");

            migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Communities"" (
            ""Id"" uuid NOT NULL,
            ""CreateTime"" timestamp with time zone NOT NULL,
            ""Name"" text NOT NULL,
            ""Description"" text,
            ""IsClosed"" boolean NOT NULL,
            ""SubscribersCount"" integer NOT NULL,
            CONSTRAINT ""PK_Communities"" PRIMARY KEY (""Id"")
        );
    ");

            migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Communities"" (
            ""Id"" uuid NOT NULL,
            ""CreateTime"" timestamp with time zone NOT NULL,
            ""Name"" text NOT NULL,
            ""Description"" text,
            ""IsClosed"" boolean NOT NULL,
            ""SubscribersCount"" integer NOT NULL,
            CONSTRAINT ""PK_Communities"" PRIMARY KEY (""Id"")
        );
    ");

    // RevokedTokens
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""RevokedTokens"" (
            ""Id"" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
            ""Token"" text NOT NULL,
            ""ExpirationDate"" timestamp with time zone NOT NULL,
            CONSTRAINT ""PK_RevokedTokens"" PRIMARY KEY (""Id"")
        );
    ");

    // Users
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Users"" (
            ""Id"" uuid NOT NULL DEFAULT gen_random_uuid(),
            ""Email"" text NOT NULL,
            ""FullName"" character varying(70) NOT NULL,
            ""Phone"" text,
            ""BirthDate"" timestamp with time zone,
            ""Gender"" text NOT NULL,
            ""CreationTime"" timestamp with time zone NOT NULL,
            ""PasswordHash"" text NOT NULL,
            CONSTRAINT ""PK_Users"" PRIMARY KEY (""Id"")
        );
    ");

    // CommunityUsers
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""CommunityUsers"" (
            ""UserId"" uuid NOT NULL,
            ""CommunityId"" uuid NOT NULL,
            ""Role"" text NOT NULL,
            CONSTRAINT ""PK_CommunityUsers"" PRIMARY KEY (""UserId"", ""CommunityId""),
            CONSTRAINT ""FK_CommunityUsers_Communities_CommunityId"" FOREIGN KEY (""CommunityId"") REFERENCES ""Communities"" (""Id"") ON DELETE CASCADE
        );
    ");

    // Posts
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Posts"" (
            ""Id"" uuid NOT NULL DEFAULT gen_random_uuid(),
            ""Title"" character varying(100) NOT NULL,
            ""Description"" text NOT NULL,
            ""ReadingTime"" integer,
            ""Image"" text,
            ""AuthorId"" uuid NOT NULL,
            ""Author"" text,
            ""CommunityId"" uuid,
            ""CommunityName"" text,
            ""AddressId"" uuid,
            ""CreateTime"" timestamp with time zone NOT NULL,
            CONSTRAINT ""PK_Posts"" PRIMARY KEY (""Id""),
            CONSTRAINT ""FK_Posts_Communities_CommunityId"" FOREIGN KEY (""CommunityId"") REFERENCES ""Communities"" (""Id"")
        );
    ");

    // Groups
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Groups"" (
            ""Id"" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
            ""Name"" text NOT NULL,
            ""IsPrivate"" boolean NOT NULL,
            ""AdminId"" integer NOT NULL,
            ""AdminId1"" uuid NOT NULL,
            CONSTRAINT ""PK_Groups"" PRIMARY KEY (""Id""),
            CONSTRAINT ""FK_Groups_Users_AdminId1"" FOREIGN KEY (""AdminId1"") REFERENCES ""Users"" (""Id"") ON DELETE CASCADE
        );
    ");

    // Comments
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Comments"" (
            ""Id"" uuid NOT NULL DEFAULT gen_random_uuid(),
            ""Content"" text NOT NULL,
            ""ModifiedDate"" timestamp with time zone,
            ""DeleteDate"" timestamp with time zone,
            ""AuthorId"" uuid NOT NULL,
            ""Author"" text,
            ""PostId"" uuid NOT NULL,
            ""ParentId"" uuid,
            ""SubComments"" integer NOT NULL,
            ""CreateTime"" timestamp with time zone NOT NULL,
            CONSTRAINT ""PK_Comments"" PRIMARY KEY (""Id""),
            CONSTRAINT ""FK_Comments_Posts_PostId"" FOREIGN KEY (""PostId"") REFERENCES ""Posts"" (""Id"") ON DELETE CASCADE
        );
    ");

    // Likes
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Likes"" (
            ""Id"" uuid NOT NULL,
            ""PostId"" uuid NOT NULL,
            ""UserId"" uuid NOT NULL,
            CONSTRAINT ""PK_Likes"" PRIMARY KEY (""Id""),
            CONSTRAINT ""FK_Likes_Posts_PostId"" FOREIGN KEY (""PostId"") REFERENCES ""Posts"" (""Id"") ON DELETE CASCADE
        );
    ");

    // Tags
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""Tags"" (
            ""Id"" uuid NOT NULL,
            ""Name"" text NOT NULL,
            ""CreateTime"" timestamp with time zone NOT NULL,
            ""PostId"" uuid,
            CONSTRAINT ""PK_Tags"" PRIMARY KEY (""Id""),
            CONSTRAINT ""FK_Tags_Posts_PostId"" FOREIGN KEY (""PostId"") REFERENCES ""Posts"" (""Id"")
        );
    ");

    // PostTags
    migrationBuilder.Sql(@"
        CREATE TABLE IF NOT EXISTS ""PostTags"" (
            ""PostId"" uuid NOT NULL,
            ""TagId"" uuid NOT NULL,
            CONSTRAINT ""PK_PostTags"" PRIMARY KEY (""PostId"", ""TagId""),
            CONSTRAINT ""FK_PostTags_Posts_PostId"" FOREIGN KEY (""PostId"") REFERENCES ""Posts"" (""Id"") ON DELETE CASCADE,
            CONSTRAINT ""FK_PostTags_Tags_TagId"" FOREIGN KEY (""TagId"") REFERENCES ""Tags"" (""Id"") ON DELETE CASCADE
        );
    ");

            migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_Comments_PostId"" ON ""Comments""(""PostId"");
    ");

    // Индекс для таблицы CommunityUsers
    migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_CommunityUsers_CommunityId"" ON ""CommunityUsers""(""CommunityId"");
    ");

    // Индекс для таблицы Groups
    migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_Groups_AdminId1"" ON ""Groups""(""AdminId1"");
    ");

    // Индекс для таблицы Likes
    migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_Likes_PostId"" ON ""Likes""(""PostId"");
    ");

    // Индекс для таблицы Posts
    migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_Posts_CommunityId"" ON ""Posts""(""CommunityId"");
    ");

    // Индекс для таблицы PostTags
    migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_PostTags_TagId"" ON ""PostTags""(""TagId"");
    ");

    // Индекс для таблицы Tags
    migrationBuilder.Sql(@"
        CREATE INDEX IF NOT EXISTS ""IX_Tags_PostId"" ON ""Tags""(""PostId"");
    ");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
        }
    }
}
